import { Box, Flex, Button, Image, useColorModeValue, Stack, Center, Text } from "@chakra-ui/react";
import { type NextPage } from "next";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";

import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
  const hello = trpc.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>WYRE App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/" />
      </Head>
      <Box bg={useColorModeValue("gray.100", "gray.900")} px={4}>
        <Flex h={16} alignItems={"center"} justifyContent={"space-between"}>
          <Image src="/Zayroll Logo.png" alt="wyre logo" w={24} m={12} />

          <Flex alignItems={"center"}>
            <Stack direction={"row"} spacing={7}>
              <AuthShowcase />
            </Stack>
          </Flex>
        </Flex>
      </Box>
      <Center>
        <Text my={10} fontWeight={700} fontSize="2xl">
          {hello.data ? <p>{hello.data.greeting}</p> : <p>Loading...</p>}
        </Text>
      </Center>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();
  const { data: secretMessage } = trpc.auth.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <Stack>
      {sessionData && <p>Logged in as {sessionData?.user?.name}</p>}
      {secretMessage && <p>{secretMessage}</p>}
      <Button
        bg="primary.main"
        color="white"
        onClick={sessionData ? () => signOut() : () => signIn()}
        width={"fit-content"}>
        {sessionData ? "Sign out" : "Sign in"}
      </Button>
    </Stack>
  );
};
